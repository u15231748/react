{"version":3,"sources":["List.js","App.js","reportWebVitals.js","index.js"],"names":["List","props","listItems","items","map","item","className","type","value","text","id","key","onChange","e","setUpdate","target","icon","onClick","deleteItem","duration","easing","library","add","faTrash","faAmbulance","App","addItems","preventDefault","newItem","state","currentItem","length","newItems","setState","alert","handleInput","Date","now","bind","filtered","this","filter","onSubmit","placeholder","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kSAwCeA,MApCf,SAAcC,GACV,IACMC,EADQD,EAAME,MACIC,KAAI,SAAAC,GACxB,OACI,qBAAKC,UAAU,OAAf,SACI,8BACI,uBACQC,KAAK,OACLC,MAAOH,EAAKI,KACZC,GAAIL,EAAKM,IACTC,SACI,SAACC,GACGZ,EAAMa,UAAUD,EAAEE,OAAOP,MAAOH,EAAKM,QAIrD,cAAC,IAAD,CACIL,UAAU,wBACVU,KAAK,QACLC,QACI,kBAAMhB,EAAMiB,WAAWb,EAAKM,YAhBjBN,EAAKM,QAuBxC,OACI,8BACI,cAAC,IAAD,CAAUQ,SAAS,MAAMC,OAAO,cAAhC,SACKlB,O,cC5BjBmB,IAAQC,IAAIC,IAASC,K,IA+ENC,E,kDA5Eb,WAAYxB,GAAO,IAAD,8BAChB,cAAMA,IAcRyB,SAAW,SAAAb,GACTA,EAAEc,iBACF,IAAMC,EAAU,EAAKC,MAAMC,YAC3B,GAAGF,EAAQnB,KAAKsB,OAAS,EACzB,CACE,IAAMC,EAAQ,sBAAO,EAAKH,MAAM1B,OAAlB,CAAyByB,IACvC,EAAKK,SAAS,CACZ9B,MAAO6B,EACPF,YAAa,CACXrB,KAAM,GACNE,IAAK,WAKTuB,MAAM,aA9BQ,EAkClBC,YAAc,SAAAtB,GACZ,EAAKoB,SAAS,CACZH,YAAa,CACXrB,KAAMI,EAAEE,OAAOP,MACfG,IAAKyB,KAAKC,UApCd,EAAKR,MAAQ,CACX1B,MAAO,GACP2B,YAAa,CACXrB,KAAM,GACNE,IAAK,KAGT,EAAKwB,YAAc,EAAKA,YAAYG,KAAjB,gBACnB,EAAKZ,SAAW,EAAKA,SAASY,KAAd,gBAChB,EAAKpB,WAAa,EAAKA,WAAWoB,KAAhB,gBAClB,EAAKxB,UAAY,EAAKA,UAAUwB,KAAf,gBAZD,E,uDA2CP3B,GACT,IAAM4B,EAAWC,KAAKX,MAAM1B,MAAMsC,QAAO,SAAApC,GAAI,OAAIA,EAAKM,MAAQA,KAC9D6B,KAAKP,SAAS,CACZ9B,MAAOoC,M,gCAID9B,EAAME,GAEd,IAAMR,EAAQqC,KAAKX,MAAM1B,MACzBA,EAAMC,KAAI,SAAAC,GACLA,EAAKM,KAAOA,IAAKN,EAAKI,KAAOA,MAElC+B,KAAKP,SAAS,CACZ9B,MAAOA,M,+BAKT,OACE,sBAAKG,UAAU,UAAf,UACE,iCACE,uBAAMI,GAAG,UAAUgC,SAAUF,KAAKd,SAAlC,UACE,uBAAOd,SAAU4B,KAAKL,YAAa3B,MAAOgC,KAAKX,MAAMC,YAAYrB,KAAMF,KAAK,OAAOoC,YAAY,kBAC/F,mDAGJ,cAAC,EAAD,CAAM7B,UAAW0B,KAAK1B,UAAWI,WAAYsB,KAAKtB,WAAYf,MAAOqC,KAAKX,MAAM1B,e,GAvEtEyC,IAAMC,WCITC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.e9f39010.chunk.js","sourcesContent":["import './List.css'\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport FlipMove from \"react-flip-move\"\n\nfunction List(props){\n    const items = props.items\n    const listItems = items.map(item => {\n        return (\n            <div className=\"list\" key={item.key}>\n                <p>\n                    <input \n                            type=\"text\" \n                            value={item.text} \n                            id={item.key}\n                            onChange={\n                                (e) => {\n                                    props.setUpdate(e.target.value, item.key)\n                                }\n                            }\n                    /> \n                    <FontAwesomeIcon \n                        className=\"float-right item-icon\" \n                        icon=\"trash\"\n                        onClick={\n                            () => props.deleteItem(item.key)\n                        }\n                    />\n                </p>\n            </div>\n        )\n    })\n    return (\n        <div>\n            <FlipMove duration=\"500\" easing=\"ease-in-out\">\n                {listItems}\n            </FlipMove> \n        </div>\n    )\n}\n\nexport default List;","import React from \"react\"\nimport './App.css';\nimport List from './List'\nimport { library } from \"@fortawesome/fontawesome-svg-core\"\nimport { faAmbulance, faTrash } from \"@fortawesome/free-solid-svg-icons\"\n\nlibrary.add(faTrash, faAmbulance)\n\nclass App extends React.Component{\n  constructor(props){\n    super(props)\n    this.state = {\n      items: [],\n      currentItem: {\n        text: '',\n        key: ''\n      }\n    }\n    this.handleInput = this.handleInput.bind(this);\n    this.addItems = this.addItems.bind(this);\n    this.deleteItem = this.deleteItem.bind(this);\n    this.setUpdate = this.setUpdate.bind(this);\n  }\n\n  addItems = e => {\n    e.preventDefault()\n    const newItem = this.state.currentItem\n    if(newItem.text.length > 0)\n    {\n      const newItems = [...this.state.items, newItem]\n      this.setState({\n        items: newItems,\n        currentItem: {\n          text: '',\n          key: ''\n        }\n      })\n    }\n    else{\n      alert(\"Add text\")\n    }\n  }\n\n  handleInput = e => {\n    this.setState({\n      currentItem: {\n        text: e.target.value,\n        key: Date.now()\n      }\n    })\n  }\n\n  deleteItem(key){\n    const filtered = this.state.items.filter(item => item.key !== key)\n    this.setState({\n      items: filtered\n    })\n  }\n\n  setUpdate(text, key)\n  {\n    const items = this.state.items\n    items.map(item => {\n      if(item.key == key) item.text = text \n    })\n    this.setState({\n      items: items  \n    })\n  }\n\n  render(){\n    return (\n      <div className=\"todoApp\">\n        <header>\n          <form id=\"to-list\" onSubmit={this.addItems}>\n            <input onChange={this.handleInput} value={this.state.currentItem.text} type=\"text\" placeholder=\"Enter Item...\"/>\n            <button>Add Item</button>\n          </form>\n        </header>\n        <List setUpdate={this.setUpdate} deleteItem={this.deleteItem} items={this.state.items}></List>\n      </div>\n    );\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}